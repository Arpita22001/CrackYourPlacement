class Solution {
public:
    int findDuplicate(vector<int>& nums) {
      1-> BRUTE FORCE APPROACH
       map<int,int>m;
       int n=nums.size();
       for(int i=0;i<n;i++)
       {
           m[nums[i]]++;
       }
       //1(pr.first)->(pr.second)
       //3 ->1
       //4 ->1
       //2 ->2
       for(auto pr:m)
       {
           if(pr.second>=2) return pr.first;
       }
       return 0;
  }
};


  2-> OPTIMAL APPROACH
       int slow=nums[0];
       int fast=nums[0];

       do{
        slow=nums[slow];
        fast=nums[nums[fast]];
       }
       while(slow!=fast);

       slow=nums[0];
       while(slow!=fast)
       {
        slow=nums[slow];
        fast=nums[fast];
       }
       return slow;  
  
    }
};
